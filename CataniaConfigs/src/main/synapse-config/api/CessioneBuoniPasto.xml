<?xml version="1.0" encoding="UTF-8"?>
<api context="/api/msistruzione/esb/istanzacessione" name="CessioneBuoniPasto" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" url-mapping="/acquisizione">
        <inSequence>
            <script language="js"><![CDATA[var log = mc.getServiceLog();
                var plInput = mc.getPayloadJSON();
           	  	var datiOriginali = plInput.dati;
           	  	/* non funziona replaceAll e si devono rimuovere gli \ dalle regular expression */
           	  	datiOriginali = datiOriginali.replace("\\", "").replace("\\", "").replace("\\", "").replace("\\", "");
           	  	var pl = JSON.parse(datiOriginali);
           	  	log.info("acquisizioneCessioneBuoniPasto Payload: " + JSON.stringify(pl));

			  	var idIstanzaOnline = plInput.id;
				var numeroProtocolloIngresso = plInput.protoNumero;
				var dataProtocolloIngresso = parseDate(plInput.protoData);
				var numeroProtocolloUscita = plInput.protoFinaleNumero ? plInput.protoFinaleNumero : null;
				var dataProtocolloUscita = parseDate(plInput.protoFinaleData);
				var dataIstanza = parseDate(plInput.dataInvio);
				var codFiscaleCittadino = plInput.codice_fiscale;
				var emailCittadino = plInput.email ? plInput.email : null;
				var mittenteCognome = findElementValue(pl, "studente1_cognome");
				var mittenteNome = findElementValue(pl, "studente1_nome");
				var mittenteLuogoNascita = findElementValue(pl, "studente1_luogo_nascita");
				var mittenteDataNascita = findElementValue(pl, "studente1_data_nascita");
				var mittenteSesso = findElementValue(pl, "studente1_sesso");
				var mittenteCodFiscale = findElementValue(pl, "studente1_cod_fiscale");
				var riceventeCognome = findElementValue(pl, "studente2_cognome");
				var riceventeNome = findElementValue(pl, "studente2_nome");
				var riceventeLuogoNascita = findElementValue(pl, "studente2_luogo_nascita");
				var riceventeDataNascita = findElementValue(pl, "studente2_data_nascita");
				var riceventeSesso = findElementValue(pl, "studente2_sesso");
				var riceventeCodFiscale = findElementValue(pl, "studente2_cod_fiscale");
				var numeroBuoni = findElementValue(pl, "buoni_pasto");

                var requestAcquisizione = {
                  "idIstanzaOnline": idIstanzaOnline, 
                  "numeroProtocolloIngresso": numeroProtocolloIngresso,
                  "dataProtocolloIngresso": dataProtocolloIngresso,
                  "numeroProtocolloUscita": numeroProtocolloUscita, 
                  "dataProtocolloUscita": dataProtocolloUscita,
                  "dataIstanza": dataIstanza,
                  "codFiscaleCittadino": codFiscaleCittadino,
                  "emailCittadino": emailCittadino,
                  "mittenteCognome": mittenteCognome,
                  "mittenteNome": mittenteNome,
                  "mittenteLuogoNascita": mittenteLuogoNascita,
                  "mittenteDataNascita": mittenteDataNascita,
                  "mittenteSesso": mittenteSesso,
                  "mittenteCodFiscale": mittenteCodFiscale,
                  "riceventeCognome": riceventeCognome,
                  "riceventeNome": riceventeNome,
                  "riceventeLuogoNascita": riceventeLuogoNascita,
                  "riceventeDataNascita": riceventeDataNascita,
                  "riceventeSesso": riceventeSesso,
                  "riceventeCodFiscale": riceventeCodFiscale,
                  "numeroBuoni": numeroBuoni
                };
                          
           	  	log.info("acquisizioneCessioneBuoniPasto request: " + JSON.stringify(requestAcquisizione));
                mc.setPayloadJSON(requestAcquisizione);
				
                function parseDate(input) {
                	if(input) {
                		return new Date(Number(input)).toISOString().split('T')[0];
                 	} else {
                 		return null;
                 	}
                }
                
                function findElementValue(pl, nomeAttributo) {
                    var value = null;

                    for (i = 0; i < pl.length; ++i) {
                        if(nomeAttributo == pl[i].name) {
                            value = pl[i].value ? pl[i].value : null;
                            break;
                        }
                    }

                    return value;
                }]]></script>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <log description="Log Input" level="custom">
                <property name="MESSAGE" value="Request received to /users resource."/>
            </log>
            <call blocking="true" description="Send Request to Users Endpoint">
                <endpoint key="buoniPastoCessione"/>
            </call>
            <sequence key="buoniPastoAcquisizioneCessioneResponse"/>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log category="ERROR" description="Log Errore" level="custom">
                <property name="text" value="An unexpected error occured"/>
                <property expression="get-property('ERROR_MESSAGE')" name="message"/>
            </log>
            <payloadFactory media-type="json">
                <format>
                  {
                    "payload": {
                      "esito": "1"
                    },
                    "outcome": {
                      "issue": [
                        {
                          "severity": "FATAL",
                          "code": "$1",
                          "message": "$2"
                        }
                      ]
                    }
                  }
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('ERROR_CODE')"/>
                    <arg evaluator="xml" expression="get-property('ERROR_MESSAGE')"/>
                </args>
            </payloadFactory>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
            <respond description="Send Error Back to Client"/>
        </faultSequence>
    </resource>
    <resource methods="POST" url-mapping="/validazione">
        <inSequence>
            <script language="js"><![CDATA[var log = mc.getServiceLog();
                var plInput = mc.getPayloadJSON();
           	  	var datiOriginali = plInput.dati;
           	  	/* non funziona replaceAll e si devono rimuovere gli \ dalle regular expression */
           	  	datiOriginali = datiOriginali.replace("\\", "").replace("\\", "").replace("\\", "").replace("\\", "");
           	  	var pl = JSON.parse(datiOriginali);
           	  	log.info("validazioneCessioneBuoniPasto Payload: " + JSON.stringify(pl));

			  	var idIstanzaOnline = plInput.id;
				var numeroProtocolloIngresso = plInput.protoNumero;
				var dataProtocolloIngresso = parseDate(plInput.protoData);
				var numeroProtocolloUscita = plInput.protoFinaleNumero ? plInput.protoFinaleNumero : null;
				var dataProtocolloUscita = parseDate(plInput.protoFinaleData);
				var dataIstanza = parseDate(plInput.dataInvio);
				var codFiscaleCittadino = plInput.codice_fiscale;
				var emailCittadino = plInput.email ? plInput.email : null;
				var mittenteCognome = findElementValue(pl, "studente1_cognome");
				var mittenteNome = findElementValue(pl, "studente1_nome");
				var mittenteLuogoNascita = findElementValue(pl, "studente1_luogo_nascita");
				var mittenteDataNascita = findElementValue(pl, "studente1_data_nascita");
				var mittenteSesso = findElementValue(pl, "studente1_sesso");
				var mittenteCodFiscale = findElementValue(pl, "studente1_cod_fiscale");
				var riceventeCognome = findElementValue(pl, "studente2_cognome");
				var riceventeNome = findElementValue(pl, "studente2_nome");
				var riceventeLuogoNascita = findElementValue(pl, "studente2_luogo_nascita");
				var riceventeDataNascita = findElementValue(pl, "studente2_data_nascita");
				var riceventeSesso = findElementValue(pl, "studente2_sesso");
				var riceventeCodFiscale = findElementValue(pl, "studente2_cod_fiscale");
				var numeroBuoni = findElementValue(pl, "buoni_pasto");

                var requestValidazione = {
                  "idIstanzaOnline": idIstanzaOnline, 
                  "numeroProtocolloIngresso": numeroProtocolloIngresso,
                  "dataProtocolloIngresso": dataProtocolloIngresso,
                  "numeroProtocolloUscita": numeroProtocolloUscita, 
                  "dataProtocolloUscita": dataProtocolloUscita,
                  "dataIstanza": dataIstanza,
                  "codFiscaleCittadino": codFiscaleCittadino,
                  "emailCittadino": emailCittadino,
                  "mittenteCognome": mittenteCognome,
                  "mittenteNome": mittenteNome,
                  "mittenteLuogoNascita": mittenteLuogoNascita,
                  "mittenteDataNascita": mittenteDataNascita,
                  "mittenteSesso": mittenteSesso,
                  "mittenteCodFiscale": mittenteCodFiscale,
                  "riceventeCognome": riceventeCognome,
                  "riceventeNome": riceventeNome,
                  "riceventeLuogoNascita": riceventeLuogoNascita,
                  "riceventeDataNascita": riceventeDataNascita,
                  "riceventeSesso": riceventeSesso,
                  "riceventeCodFiscale": riceventeCodFiscale,
                  "numeroBuoni": numeroBuoni,
                };
                          
           	  	log.info("validazioneCessioneBuoniPasto request: " + JSON.stringify(requestValidazione));
                mc.setPayloadJSON(requestValidazione);
				
                function parseDate(input) {
                	if(input) {
                		return new Date(Number(input)).toISOString().split('T')[0];
                 	} else {
                 		return null;
                 	}
                }
                
                function findElementValue(pl, nomeAttributo) {
                    var value = null;

                    for (i = 0; i < pl.length; ++i) {
                        if(nomeAttributo == pl[i].name) {
                            value = pl[i].value ? pl[i].value : null;
                            break;
                        }
                    }

                    return value;
                }]]></script>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <log description="Log Input" level="custom">
                <property name="MESSAGE" value="Request received to /users resource."/>
            </log>
            <call blocking="true" description="Send Request to Users Endpoint">
                <endpoint key="buoniPastoCessione"/>
            </call>
            <sequence key="buoniPastoValidazioneCessioneResponse"/>
            <respond description="Send Response Back to Client"/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log category="ERROR" description="Log Errore" level="custom">
                <property name="text" value="An unexpected error occured"/>
                <property expression="get-property('ERROR_MESSAGE')" name="message"/>
            </log>
            <payloadFactory media-type="json">
                <format>
                  {
                    "payload": {
                      "esito": "1"
                    },
                    "outcome": {
                      "issue": [
                        {
                          "severity": "FATAL",
                          "code": "$1",
                          "message": "$2"
                        }
                      ]
                    }
                  }
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('ERROR_CODE')"/>
                    <arg evaluator="xml" expression="get-property('ERROR_MESSAGE')"/>
                </args>
            </payloadFactory>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
            <respond description="Send Error Back to Client"/>
        </faultSequence>
    </resource>
</api>
